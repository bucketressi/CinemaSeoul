<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.uos.cinemaseoul.dao.book.BookDao">

    <!-- [개봉중인 영화 전부 조회]-->
    <select id="getBookAvailableMovie" resultType="MovieShortCutDto"><![CDATA[
        SELECT M.MOVI_ID, M.MOVI_NAME, (SELECT CODE_NAME FROM CODE WHERE CODE_ID = M.AVAI_AGE_CODE) FROM MOVIE M
        WHERE M.MOVI_ID IN (
            SELECT S.MOVI_ID FROM SHOWSCHEDULE S
            WHERE S.SHOW_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
              AND S.SHOW_DATE < TO_CHAR(SYSDATE+7, 'YYYYMMDD') )
        ]]>
    </select>

    <!-- [해당 영화, 일자의 상영일정 조회]-->
    <select id="getScheduleFromMoviDate" resultType="ShowScheduleDto" parameterType="ScheduleAskDto">
        SELECT S.SHOW_ID, S.SHOW_DATE, S.SHOW_TIME,
               M.MOVI_NAME,
               H.HALL_NAME,
               H.AVAI_SEAT_AMOUNT - (SELECT COUNT(BOOK_ID) FROM BOOKSEAT BS WHERE BS.SHOW_ID = S.SHOW_ID) AS REMA_AMOUNT,
               H.HALL_ROW * H.HALL_COL AS HALL_SEAT
        FROM SHOWSCHEDULE S
        INNER JOIN MOVIE M on S.MOVI_ID = M.MOVI_ID
        INNER JOIN HALL H on S.HALL_ID = H.HALL_ID

        WHERE S.MOVI_ID = #{movi_id} AND S.SHOW_DATE = #{show_date}
          AND S.STARTED = '0'
          <![CDATA[ AND CONCAT(SHOW_DATE,SHOW_TIME) >= TO_CHAR(SYSDATE, ('YYYYMMDDHH24MI')) ]]>
    </select>




    <!-- [상영일정 좌석 조회]-->
    <!-- 상영관 가능좌석 조회-->
    <resultMap id="bookseatlist" type="BookSeatListDto">
        <id property="hall_id" column="HALL_ID"/>
        <result property="hall_row" column="HALL_ROW"/>
        <result property="hall_col" column="HALL_COL"/>
        <collection property="seat_list" javaType="ShowScheduleSeatDto">
            <id property="seat_num" column="SEAT_NUM"/>
            <result property="seat_type" column="SEAT_TYPE"/>
        </collection>
    </resultMap>
    
    <select id="getShowScheduleSeat" resultMap="bookseatlist">
        SELECT H.HALL_ID, H.HALL_ROW, H.HALL_COL, S.SEAT_NUM, S.SEAT_TYPE_CODE AS SEAT_TYPE FROM SEAT S
        INNER JOIN HALL H on S.HALL_ID = H.HALL_ID
        WHERE S.HALL_ID = (SELECT HALL_ID FROM SHOWSCHEDULE WHERE SHOW_ID = #{show_id})
        ORDER BY SEAT_NUM
    </select>

    <!-- 예매된 좌석 조회-->
    <select id="getBookedSeat" resultType="ShowScheduleSeatDto">
        SELECT HALL_ID, SEAT_NUM FROM BOOKSEAT BS
        WHERE BS.SHOW_ID = #{show_id}
        ORDER BY SEAT_NUM
    </select>


    <!-- [예매 정보 조회]-->
    <!--기본 정보 조회-->
    <select id="getBookInfo" resultType="BookDto">
        SELECT B.BOOK_ID, B.BOOK_PAY_ID, B.TEEN, B.ADULT, B.SENIOR, B.IMPAIRED, B.BOOK_DATETIME,
               S.SHOW_DATE, S.SHOW_TIME, H.HALL_NAME,
               M.MOVI_NAME, M.RUN_TIME,
               U.USER_NAME,
               B2.USE_CODE, B2.USE_DATETIME
        FROM BOOK B
        INNER JOIN SHOWSCHEDULE S on S.SHOW_ID = B.SHOW_ID
        INNER JOIN MOVIE M on S.MOVI_ID = M.MOVI_ID
        INNER JOIN HALL H on S.HALL_ID = H.HALL_ID
        INNER JOIN USERS U on B.USER_ID = U.USER_ID
        INNER JOIN BOOKPAY B2 on B.BOOK_PAY_ID = B2.BOOK_PAY_ID

        WHERE B.BOOK_ID = #{book_id}
    </select>

    <!-- 예매 좌석 조회-->
    <select id="getMyBookedSeat" resultType="Integer">
        SELECT BS.SEAT_NUM FROM BOOKSEAT BS WHERE BS.BOOK_ID = #{book_id}
    </select>


    <!-- [예매 정보 리스트 조회]-->
    <!-- 페이지 수 -->
    <select id="countList" parameterType="BookSearchCriteria" resultType="Integer">
        SELECT COUNT(BOOK_ID) FROM BOOK B
        INNER JOIN SHOWSCHEDULE S on S.SHOW_ID = B.SHOW_ID
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="user_id != null">
                AND B.USER_ID = #{user_id}
            </if>

            <if test="start_date != null"><![CDATA[
                AND S.SHOW_DATE >= #{start_date}
            ]]></if>

            <if test="end_date != null"><![CDATA[
                AND S.SHOW_DATE <= #{end_date}
            ]]></if>
        </trim>
    </select>


    <!-- 페이지 별 내용 조회 -> 이후 좌석 받아오기-->
    <select id="selectBookList" parameterType="BookSearchCriteria" resultType="BookListInfoDto">
        SELECT
               B.BOOK_ID, B.BOOK_PAY_ID, B.USER_NAME, B.BOOK_DATETIME,
               B.SHOW_DATE, B.SHOW_TIME,
               B.MOVI_NAME, B.HALL_NAME
        FROM (
            SELECT /*+index_desc(IDX_BOOK_PK)*/ ROWNUM AS RNUM,
                   A.BOOK_ID, A.BOOK_PAY_ID, A.USER_NAME, A.BOOK_DATETIME,
                   A.SHOW_DATE, A.SHOW_TIME,
                   A.MOVI_NAME, A.HALL_NAME
            FROM(
                SELECT
                       BK.BOOK_ID, BK.BOOK_PAY_ID, U.USER_NAME, BK.BOOK_DATETIME,
                       S.SHOW_DATE, S.SHOW_TIME,
                       M.MOVI_NAME, H.HALL_NAME

                FROM BOOK BK
                INNER JOIN SHOWSCHEDULE S on S.SHOW_ID = BK.SHOW_ID
                INNER JOIN MOVIE M on S.MOVI_ID = M.MOVI_ID
                INNER JOIN HALL H on S.HALL_ID = H.HALL_ID
                INNER JOIN USERS U ON U.USER_ID = BK.USER_ID

                <trim prefix="WHERE" prefixOverrides="AND">
                    <if test="user_id != null">
                        AND BK.USER_ID = #{user_id}
                    </if>

                    <if test="start_date != null"><![CDATA[
                        AND S.SHOW_DATE >= #{start_date}
                    ]]></if>

                    <if test="end_date != null"><![CDATA[
                        AND  S.SHOW_DATE <= #{end_date}
                    ]]></if>
                </trim>
                ORDER BY BOOK_ID
            ) A
            <![CDATA[ WHERE ROWNUM  <= #{page}*#{amount}) B
        WHERE B.RNUM > (#{page}-1)*#{amount} ]]>
    </select>





    <!--[예매 취소]-->
    <delete id="cancel" parameterType="Integer">
        DELETE BOOK WHERE BOOK_ID = #{book_id}
    </delete>

</mapper>
